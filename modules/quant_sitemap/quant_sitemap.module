<?php

/**
 * @file
 * Hook implementations for Quant sitemap.
 */

/**
 * Implements hook_help().
 */
function quant_sitemap_help($section) {
  switch ($section) {
    case 'admin/help#quant_sitemap':
      return quant_help('admin/help#quant');
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function quant_sitemap_form_quant_seed_settings_alter(&$form, $form_state) {
  $form['quant_seed_sitemap'] = array(
    '#type' => 'checkbox',
    '#title' => t('Export sitemaps'),
    '#default_value' => variable_get('quant_seed_sitemap', FALSE),
  );
}

/**
 * Implements hook_quant_seed_queue().
 */
function quant_sitemap_quant_seed_queue() {
  if (!variable_get('quant_seed_sitemap', FALSE)) {
    return;
  }

  $base_url = quant_get_base_url();
  $queue = quant_get_queue();
  $sitemaps = xmlsitemap_sitemap_load_multiple(FALSE);
  $context = array('type' => 'sitemap');

  foreach ($sitemaps as $sitemap) {
    // Switch sitemap base URL to the Quant value.
    $sitemap->uri['options']['base_url'] = $base_url;
    $item = array(
      'quant_seed',
      array(url($sitemap->uri['path'], $sitemap->uri['options']), $context),
    );
    $queue->createItem($item);
  }

  // Send the xmlsitemap stylesheet if it's enabled.
  if (variable_get('xmlsitemap_xsl', 1)) {
    $queue->createItem(array('quant_seed', array("$base_url/sitemap.xsl", $context)));
  }
}
